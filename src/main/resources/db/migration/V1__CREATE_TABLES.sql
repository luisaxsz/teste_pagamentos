CREATE TABLE STATUS_PAGAMENTO
(
    ID   NUMBER(19) PRIMARY KEY,
    TIPO VARCHAR2(255) NOT NULL,
    NOME VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE SEQ_STATUS_PAGAMENTO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE
OR REPLACE TRIGGER TRG_STATUS_PAGAMENTO_BI
BEFORE INSERT ON STATUS_PAGAMENTO
FOR EACH ROW
BEGIN
    IF
:NEW.ID IS NULL THEN
SELECT SEQ_STATUS_PAGAMENTO.NEXTVAL
INTO :NEW.ID
FROM dual;
END IF;
END;
/

CREATE TABLE TIPO_PAGAMENTO
(
    ID   NUMBER(19) PRIMARY KEY,
    TIPO VARCHAR2(255) NOT NULL,
    NOME VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE SEQ_TIPO_PAGAMENTO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE
OR REPLACE TRIGGER TRG_TIPO_PAGAMENTO_BI
BEFORE INSERT ON TIPO_PAGAMENTO
FOR EACH ROW
BEGIN
    IF
:NEW.ID IS NULL THEN
SELECT SEQ_TIPO_PAGAMENTO.NEXTVAL
INTO :NEW.ID
FROM dual;
END IF;
END;
/

CREATE TABLE PAGAMENTO
(
    ID                NUMBER(19) PRIMARY KEY,
    CPF_CNPJ          VARCHAR2(255),
    TIPO_PAGAMENTO_ID NUMBER(19) NOT NULL,
    NUM_CARTAO        VARCHAR2(255),
    VALOR             NUMBER(19, 2),
    STATUS_ID         NUMBER(19) NOT NULL,
    CONSTRAINT fk_pagamento_tipo FOREIGN KEY (TIPO_PAGAMENTO_ID)
        REFERENCES TIPO_PAGAMENTO (ID),
    CONSTRAINT fk_pagamento_status FOREIGN KEY (STATUS_ID)
        REFERENCES STATUS_PAGAMENTO (ID)
);

CREATE SEQUENCE SEQ_PAGAMENTO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;

CREATE
OR REPLACE TRIGGER TRG_PAGAMENTO_BI
BEFORE INSERT ON PAGAMENTO
FOR EACH ROW
BEGIN
    IF
:NEW.ID IS NULL THEN
SELECT SEQ_PAGAMENTO.NEXTVAL
INTO :NEW.ID
FROM dual;
END IF;
END;
/
